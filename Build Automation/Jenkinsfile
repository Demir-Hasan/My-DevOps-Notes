CODE_CHANGES = getGitChanges()
pipeline {
    agent any
    tools {
      maven 'MAVEN'
    }  
    SERVER_CREDENTIALS = credentials('server-credentials')  // this should be created in the configurations first.
    environment {
      NEW_VERSION = '1.3.0' // any environment defined here will be available to all of the stages below.
    }
    stages {
        stage('build') {
          when {
            expression {
              env.BRANCH_NAME == 'dev' && env.CODE_CHANGES == true  // executes this stage only if the env variable is dev and code_changes is true
            }
            steps {
                echo 'building the application...'
                echo "building version ${NEW_VERSION}" // important note: if you include env variable in the script, put in double quotes
                sh "mvn install"
            }
        }
        stage('test') {
          when {
            expression {
              env.BRANCH_NAME == 'dev' || env.BRANCH_NAME == 'master'  // executes this stage only if the env variable is dev or master
            }
          }  
          steps {
                echo 'testing the application...'
            }
        }
        stage('deploy') {
            steps {
                echo 'deploying the application...'
                echo "deploying with ${SERVER_CREDENTIALS}"   
            }
        }
        stage('Report') {
            steps {
                echo 'Reporting....'
            }
        }
    }
  post {      // Executes some logic AFTER all stages executued
    always {
      // execute the logic always eg. sending a notification to the team
    }
    success {
      //
    }
    failure {
      //
    }
  }  
}
  
// for ENV VARIABLE in Jenkins, check local host(or IP address of jenkins server)/env-vars.html
// Credentials Plugin and Credentials Binding Plugin  
